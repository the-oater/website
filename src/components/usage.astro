---
export interface Props {
    background?: string;
    id?: string;
    cards: Array;
}

const { background, id, cards } = Astro.props;
---

<section class={background} id={id}>
    <div class="mx-auto py-20 px-24"> <!-- change the img padding/margin -->
        {
            cards.map((card, index) => (
                <div
                    class={`grid ${index === 0 ? "" : "hidden"} items-center gap-12 sm:grid-cols-1 md:grid-cols-2`} 
                    id={`card${index + 1}`}
                    style={{ position: "relative", left: "calc(50% + -1cm)", transform: "translateX(-50%)" }} // Move the second card to the right by 2cm 
                >
                    <div class="relative order-first w-full">
                        <img class="rounded opacity-100 transition-opacity duration-500 ease-in-out" src={card.img} />
                        {cards.map((_, i) => (
                            <button
                                class={`hover:outline-3 absolute ${
                                    i === 0 ? "left-[15.6%]" : i === 1 ? "left-[39.6%]" : "right-[15.5%]"             //change button positioning: left(1) left (2) right (3)
                                } bottom-[37%] h-[31.6%] w-[21%] rounded-lg ${i === index ? "outline-3" : ""} ${ //change the size of buttons
                                    i === 0 ? "rounded-lg-2xl" : i === 2 ? "rounded-lg-2xl" : ""
                                } transition-all hover:bg-oat/50 ${
                                    i === index ? "outline outline-oat" : "hover:outline hover:outline-oat"
                                }`}
                                data-card={i + 1}
                            />
                        ))}
                    </div>
                    <div class="info max-w-xl opacity-100 transition-opacity duration-500 ease-in-out">
                        <img src={card.icon} class="icon h-16 pb-8" />
                        <h2 class="underline-4xl carousel-title text-4xl font-bold text-raisin">{card.title}</h2>
                        <p class="mt-12 text-base leading-loose text-raisin">{card.text}</p>
                        <div class="carousel-indicators mt-12 mb-6 flex space-x-3">
                            {cards.map((_, i) => (
                                <button class={`h-2 w-2 rounded-full ${i === index ? "bg-gray-800" : "bg-gray-400"}`} data-card={i + 1} />
                            ))}
                        </div>
                    </div>
                </div>
            ))
        }
    </div>
    <script>
        const cards = Array.from(document.querySelectorAll("[id^=card]"));
        let cardIndex = 0;

        let autoScrollInterval = setInterval(() => {
            cardIndex = (cardIndex + 1) % cards.length; // This will keep cardIndex in the range 0 to cards.length - 1
            showCard(String(cardIndex + 1)); // We add 1 to adjust for zero-based indexing in display
        }, 5000);

        document.addEventListener("click", function (event) {
            const target = event.target;
            if (target.matches("[data-card]")) {
                clearInterval(autoScrollInterval); // This will stop the automatic rotation
                const cardNumber = target.getAttribute("data-card");
                showCard(cardNumber);
            }
        });

        function showCard(cardNumber) {
            const cardIndex = parseInt(cardNumber) - 1; // Adjust for zero-based indexing
            cards.forEach((card, index) => {
                if (index === cardIndex) {
                    card.classList.remove("hidden");
                } else {
                    card.classList.add("hidden");
                }
            });
        }
    </script>
</section>
